const fs = require('fs')
const path = require('path')
const chalk = require('chalk')
const execSync = require('child_process').execSync

module.exports = {
    addSupport: (root, name) => {

        console.log(chalk.hex('#F85211')('Installing Redux dependencies...'))
        execSync(`cd ${name} && npm install --save redux react-redux redux-thunk`, { stdio: [0, 1, 2] })
        console.log(chalk.hex('#F85211')('Generating folders...'))
        execSync(`cd ${name} && mkdir -p src/ducks`)

        console.log(chalk.hex('#F85211')('Generating files...'))
        fs.writeFileSync(path.join(root, 'src/ducks/index.js'), `import { combineReducers } from 'redux' 
import { default as auth } from './Auth' \n
export default combineReducers({ auth })`)

        fs.writeFileSync(path.join(root, 'src/ducks/Auth.js'), `export const AUTHENTICATE_USER = 'auth/AUTHENTICATE_USER'\n
const INITIAL_STATE = { user: null }\n
export default (state = INITIAL_STATE, action) => {
    switch(action.type) {
        case AUTHENTICATE_USER:
            return state
        default:
            return state
    }
}\n
export const authenticateUser = () => ({ type: AUTHENTICATE_USER })`)

        fs.writeFileSync(path.join(root, 'src/config/Store.js'), `import ducks from '../ducks' 
import thunk from 'redux-thunk'
import { createStore, compose, applyMiddleware } from 'redux' \n
const Store = createStore(ducks, {}, compose(applyMiddleware(thunk)))
export default Store`)

        fs.unlinkSync(path.join(root, 'App.js'))

        fs.writeFileSync(path.join(root, 'App.js'), `import React from 'react' 
import { Provider } from 'react-redux'
import { View, Text } from 'react-native'
import { default as Store } from './src/config/Store'\n
export default class App extends React.Component {
    render() {
        return (    
            <Provider store={Store}>
                <View> 
                    <Text>Hello World!</Text>
                    <Text>Boilerplate generated by ruptiva-cli</Text>
                </View>
            </Provider>
        )
    }
}`)

        console.log(chalk.hex('#F85211')('Redux added to your project.'))
    }
}
